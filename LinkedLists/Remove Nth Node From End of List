/**
 * Definition for singly-linked list.
 * public class ListNode {
 * int val;
 * ListNode next;
 * ListNode() {}
 * ListNode(int val) { this.val = val; }
 * ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {

        ListNode temp = head;
        int len = 0;
        while (temp != null) {
            len++;
            temp = temp.next;
        }
        if (len == 0 || len == 1) {
            head = null;
            return head;
        }
        int target = len - n;
        temp = head;
        ListNode ptemp = null;
        if (target == 0) {
            head = head.next;
            return head;
        }
        while (target != 0) {
            ptemp = temp;
            temp = temp.next;
            target--;
        }
        if (temp.next != null) {
            ptemp.next = temp.next;
        } else {
            ptemp.next = null;
        }

        return head;
    }
}
